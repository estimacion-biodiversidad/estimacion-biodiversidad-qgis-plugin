# -*- coding: utf-8 -*-
"""
/***************************************************************************
 IdentifyToolDialog
                                 A QGIS plugin
 tool for clicking on feature
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-11-16
        git sha              : $Format:%H$
        copyright            : (C) 2018 by Jose
        email                : doe@doe.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5 import uic
from PyQt5 import QtWidgets
from PyQt5.QtGui import QFont, QPixmap
from PyQt5.QtWidgets import QPushButton, QLabel, QHBoxLayout, QDialog, QWidget, QVBoxLayout, QScrollArea,\
    QTableWidget, QTableWidgetItem, QFileDialog, QMessageBox, QCheckBox, QLineEdit, QProgressBar, QFrame

from PyQt5.QtCore import QRect, Qt, QFile, QTimer

from .identify_tool_dialog import IdentifyToolDialog

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'set_columns_dialog_base.ui'))


class SetColumnsDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(SetColumnsDialog, self).__init__(parent)
        #self.setupUi(self)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        p = self.palette()
        p.setColor(self.backgroundRole(), Qt.white)
        self.setPalette(p)
        self.resize(900,700)

        # attributes
        self.filename = None

        self.progress = QProgressBar(self)
        self.progress.setGeometry(20, 550, 480, 20)
        self.progress.setRange(0,0)
        self.progress.setVisible(False)

        self.progressInfo = QLabel(self)
        self.progressInfo.setText("Generando el reporte, por favor espere...")
        self.progressInfo.move(20, 570)
        newfont = QFont("Arial", 10)
        newfont.setItalic(True)
        self.progressInfo.setFont(newfont)
        self.progressInfo.setVisible(False)

    def showDialog(self, layer, columnList, fonafifoUrl):
        self.layer=layer
        self.columnList=columnList
        self.fonafifoUrl = fonafifoUrl

        MAX_FOOTER = 600

        # FONAFIFO logo
        pic = QLabel(self)
        pic.setGeometry(600, MAX_FOOTER-30, 150, 50)
        pixmap = QPixmap()
        pixmap.load(fonafifoUrl);
        pic.setPixmap(pixmap)

        self.labelHeader = QLabel(self)
        self.labelHeader.setText("Despliegue de estadísticas")
        self.labelHeader.setStyleSheet('color: #076F00')
        self.labelHeader.move(10, 20)
        newfont = QFont("Times", 20, QFont.Bold)
        self.labelHeader.setFont(newfont)

        self.frame = QFrame(self)
        self.frame.setFrameShape(QFrame.HLine)
        self.frame.setFrameShadow(QFrame.Sunken)
        self.frame.move(5,55);
        self.frame.resize(1955,5)


        self.buttonDescargar = QPushButton('Cargar Tabla', self)
        self.buttonDescargar.move(20, 590)
        self.buttonDescargar.resize(200, 30)
        self.buttonDescargar.clicked.connect(self.looping)

        self.buttonCerrar = QPushButton('Cerrar', self)
        self.buttonCerrar.move(270, 590)
        self.buttonCerrar.resize(200, 30)
        self.buttonCerrar.clicked.connect(self.close)

        X = 10
        Y = 70

        HEIGHT=30
        WIDTH_LABEL=400
        INCREMENT_Y=20


        self.checkbox_presencia_total_especies = QCheckBox("Riqueza total de especies por registros de presencia", self)
        self.checkbox_presencia_total_especies.setGeometry(X,Y,WIDTH_LABEL,HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_especies_amenazadas = QCheckBox("Riqueza total de especies por registros de presencia - Amenazadas UICN", self)
        self.checkbox_presencia_total_especies_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_especies_amenazadas_lcvs = QCheckBox("Riqueza total de especies por registros de presencia - Amenazadas LCVS", self)
        self.checkbox_presencia_total_especies_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_presencia_total_mammalia = QCheckBox("Riqueza total de MAMMALIA por registros de presencia", self)
        self.checkbox_presencia_total_mammalia.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_mammalia_amenazadas = QCheckBox("Riqueza total de MAMMALIA por registros de presencia - Amenazadas UICN", self)
        self.checkbox_presencia_total_mammalia_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_mammalia_amenazadas_lcvs = QCheckBox("Riqueza total de MAMMALIA por registros de presencia - Amenazadas LCVS", self)
        self.checkbox_presencia_total_mammalia_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_presencia_total_aves = QCheckBox("Riqueza total de AVES por registros de presencia", self)
        self.checkbox_presencia_total_aves.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_aves_amenazadas = QCheckBox("Riqueza total de AVES por registros de presencia - Amenazadas UICN", self)
        self.checkbox_presencia_total_aves_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_aves_amenazadas_lcvs = QCheckBox("Riqueza total de AVES por registros de presencia - Amenazadas LCVS", self)
        self.checkbox_presencia_total_aves_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_presencia_total_reptilia = QCheckBox("Riqueza total de REPTILIA por registros de presencia", self)
        self.checkbox_presencia_total_reptilia.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_reptilia_amenazadas = QCheckBox("Riqueza total de REPTILIA por registros de presencia - Amenazadas UICN", self)
        self.checkbox_presencia_total_reptilia_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_reptilia_amenazadas_lcvs = QCheckBox("Riqueza total de REPTILIA por registros de presencia - Amenazadas LCVS", self)
        self.checkbox_presencia_total_reptilia_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_presencia_total_amphibia = QCheckBox("Riqueza total de AMPHIBIA por registros de presencia", self)
        self.checkbox_presencia_total_amphibia.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_amphibia_amenazadas = QCheckBox("Riqueza total de AMPHIBIA por registros de presencia - Amenazadas UICN", self)
        self.checkbox_presencia_total_amphibia_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_amphibia_amenazadas_lcvs = QCheckBox("Riqueza total de AMPHIBIA por registros de presencia - Amenazadas LCVS", self)
        self.checkbox_presencia_total_amphibia_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_presencia_total_trees = QCheckBox("Riqueza total de PLANTAE por registros de presencia", self)
        self.checkbox_presencia_total_trees.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_trees_amenazadas = QCheckBox("Riqueza total de PLANTAE por registros de presencia - Amenazadas UICN", self)
        self.checkbox_presencia_total_trees_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_presencia_total_trees_amenazadas_lcvs = QCheckBox("Riqueza total de PLANTAE por registros de presencia - Amenazadas LCVS", self)
        self.checkbox_presencia_total_trees_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)

        Y = 70
        X = 450

        self.checkbox_distribucion_total_especies = QCheckBox("Riqueza total de especies por áreas de distribución", self)
        self.checkbox_distribucion_total_especies.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_especies_amenazadas = QCheckBox("Riqueza total de especies por áreas de distribución - Amenazadas UICN", self)
        self.checkbox_distribucion_total_especies_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_especies_amenazadas_lcvs = QCheckBox("Riqueza total de especies por áreas de distribución - Amenazadas LCVS", self)
        self.checkbox_distribucion_total_especies_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_mammalia = QCheckBox("Riqueza total de MAMMALIA", self)
        self.checkbox_distribucion_total_mammalia.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_mammalia_amenazadas = QCheckBox("Riqueza total de MAMMALIA por áreas de distribución - Amenazadas UICN", self)
        self.checkbox_distribucion_total_mammalia_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_mammalia_amenazadas_lcvs = QCheckBox("Riqueza total de MAMMALIA por áreas de distribución - Amenazadas LCVS", self)
        self.checkbox_distribucion_total_mammalia_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_aves = QCheckBox("Riqueza total de AVES por áreas de distribución", self)
        self.checkbox_distribucion_total_aves.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_aves_amenazadas = QCheckBox("Riqueza total de AVES por áreas de distribución - Amenazadas UICN", self)
        self.checkbox_distribucion_total_aves_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_aves_amenazadas_lcvs = QCheckBox("Riqueza total de AVES por áreas de distribución - Amenazadas LCVS", self)
        self.checkbox_distribucion_total_aves_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_reptilia = QCheckBox("Riqueza total de REPTILIA por áreas de distribución", self)
        self.checkbox_distribucion_total_reptilia.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_reptilia_amenazadas = QCheckBox("Riqueza total de REPTILIA por áreas de distribución - Amenazadas UICN", self)
        self.checkbox_distribucion_total_reptilia_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_reptilia_amenazadas_lcvs = QCheckBox("Riqueza total de REPTILIA por áreas de distribución - Amenazadas LCVS", self)
        self.checkbox_distribucion_total_reptilia_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_amphibia = QCheckBox("Riqueza total de AMPHIBIA por áreas de distribución", self)
        self.checkbox_distribucion_total_amphibia.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_amphibia_amenazadas = QCheckBox("Riqueza total de AMPHIBIA - Amenazadas UICN", self)
        self.checkbox_distribucion_total_amphibia_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_amphibia_amenazadas_lcvs = QCheckBox("Riqueza total de AMPHIBIA por áreas de distribución - Amenazadas LCVS", self)
        self.checkbox_distribucion_total_amphibia_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_trees = QCheckBox("Riqueza total de PLANTAE por áreas de distribución", self)
        self.checkbox_distribucion_total_trees.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_trees_amenazadas = QCheckBox("Riqueza total de PLANTAE por áreas de distribución - Amenazadas UICN", self)
        self.checkbox_distribucion_total_trees_amenazadas.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)
        Y += INCREMENT_Y
        self.checkbox_distribucion_total_trees_amenazadas_lcvs = QCheckBox("Riqueza total de PLANTAE por áreas de distribución - Amenazadas LCVS", self)
        self.checkbox_distribucion_total_trees_amenazadas_lcvs.setGeometry(X, Y, WIDTH_LABEL, HEIGHT)






        self.show()

    def looping(self):

        self.progressInfo.setVisible(True)
        self.progress.setVisible(True)
        self.looptimer = QTimer()
        self.looptimer.setSingleShot(True)
        self.looptimer.timeout.connect(self.cargarTabla)
        self.looptimer.start(5000)


    def cargarTabla(self):


        self.columnList.clear()

        ###############################################################################
        ### VALIDACIONES
        ###############################################################################
        if self.checkbox_presencia_total_especies.isChecked():
            self.columnList.append("spp_all_richness_occurrence")
            self.columnList.append("spp_all_richness_occurrence_names")
        if self.checkbox_presencia_total_especies_amenazadas.isChecked():
            self.columnList.append("spp_all_threatened_richness_occurrence")
            self.columnList.append("spp_all_threatened_richness_occurrence_names")
        if self.checkbox_presencia_total_especies_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_all_lcvs_richness_occurrence")
            self.columnList.append("spp_all_lcvs_richness_occurrence_names")

        if self.checkbox_presencia_total_mammalia.isChecked():
            self.columnList.append("spp_mammalia_richness_occurrence")
            self.columnList.append("spp_mammalia_richness_occurrence_names")
        if self.checkbox_presencia_total_mammalia_amenazadas.isChecked():
            self.columnList.append("spp_mammalia_threatened_richness_occurrence")
            self.columnList.append("spp_mammalia_threatened_richness_occurrence_names")
        if self.checkbox_presencia_total_mammalia_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_mammalia_lcvs_richness_occurrence")
            self.columnList.append("spp_mammalia_lcvs_richness_occurrence_names")


        if self.checkbox_presencia_total_aves.isChecked():
            self.columnList.append("spp_aves_richness_occurrence")
            self.columnList.append("spp_aves_richness_occurrence_names")
        if self.checkbox_presencia_total_aves_amenazadas.isChecked():
            self.columnList.append("spp_aves_threatened_richness_occurrence")
            self.columnList.append("spp_aves_threatened_richness_occurrence_names")
        if self.checkbox_presencia_total_aves_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_aves_lcvs_richness_occurrence")
            self.columnList.append("spp_aves_lcvs_richness_occurrence_names")

        if self.checkbox_presencia_total_reptilia.isChecked():
            self.columnList.append("spp_reptilia_richness_occurrence")
            self.columnList.append("spp_reptilia_richness_occurrence_names")
        if self.checkbox_presencia_total_reptilia_amenazadas.isChecked():
            self.columnList.append("spp_reptilia_threatened_richness_occurrence")
            self.columnList.append("spp_reptilia_threatened_richness_occurrence_names")
        if self.checkbox_presencia_total_reptilia_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_reptilia_lcvs_richness_occurrence")
            self.columnList.append("spp_reptilia_lcvs_richness_occurrence_names")


        if self.checkbox_presencia_total_amphibia.isChecked():
            self.columnList.append("spp_amphibia_richness_occurrence")
            self.columnList.append("spp_amphibia_richness_occurrence_names")
        if self.checkbox_presencia_total_amphibia_amenazadas.isChecked():
            self.columnList.append("spp_amphibia_threatened_richness_occurrence")
            self.columnList.append("spp_amphibia_threatened_richness_occurrence_names")
        if self.checkbox_presencia_total_amphibia_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_amphibia_lcvs_richness_occurrence")
            self.columnList.append("spp_amphibia_lcvs_richness_occurrence_names")


        if self.checkbox_presencia_total_trees.isChecked():
            self.columnList.append("spp_trees_richness_occurrence")
            self.columnList.append("spp_trees_richness_occurrence_names")
        if self.checkbox_presencia_total_trees_amenazadas.isChecked():
            self.columnList.append("spp_trees_threatened_richness_occurrence")
            self.columnList.append("spp_trees_threatened_richness_occurrence_names")
        if self.checkbox_presencia_total_trees_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_trees_lcvs_richness_occurrence")
            self.columnList.append("spp_trees_lcvs_richness_occurrence_names")

        # DISTRIBUTION

        if self.checkbox_distribucion_total_especies.isChecked():
            self.columnList.append("spp_all_richness_distribution")
            self.columnList.append("spp_all_richness_distribution_names")
        if self.checkbox_distribucion_total_especies_amenazadas.isChecked():
            self.columnList.append("spp_all_threatened_richness_distribution")
            self.columnList.append("spp_all_threatened_richness_distribution_names")
        if self.checkbox_distribucion_total_especies_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_all_lcvs_richness_distribution")
            self.columnList.append("spp_all_lcvs_richness_distribution_names")


        if self.checkbox_distribucion_total_mammalia.isChecked():
            self.columnList.append("spp_mammalia_richness_distribution")
            self.columnList.append("spp_mammalia_richness_distribution_names")
        if self.checkbox_distribucion_total_mammalia_amenazadas.isChecked():
            self.columnList.append("spp_mammalia_threatened_richness_distribution")
            self.columnList.append("spp_mammalia_threatened_richness_distribution_names")
        if self.checkbox_distribucion_total_mammalia_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_mammalia_lcvs_richness_distribution")
            self.columnList.append("spp_mammalia_lcvs_richness_distribution_names")


        if self.checkbox_distribucion_total_aves.isChecked():
            self.columnList.append("spp_aves_richness_distribution")
            self.columnList.append("spp_aves_richness_distribution_names")
        if self.checkbox_distribucion_total_aves_amenazadas.isChecked():
            self.columnList.append("spp_aves_threatened_richness_distribution")
            self.columnList.append("spp_aves_threatened_richness_distribution_names")
        if self.checkbox_distribucion_total_aves_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_aves_lcvs_richness_distribution")
            self.columnList.append("spp_aves_lcvs_richness_distribution_names")


        if self.checkbox_distribucion_total_reptilia.isChecked():
            self.columnList.append("spp_reptilia_richness_distribution")
            self.columnList.append("spp_reptilia_richness_distribution_names")
        if self.checkbox_distribucion_total_reptilia_amenazadas.isChecked():
            self.columnList.append("spp_reptilia_threatened_richness_distribution")
            self.columnList.append("spp_reptilia_threatened_richness_distribution_names")
        if self.checkbox_distribucion_total_reptilia_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_reptilia_lcvs_richness_distribution")
            self.columnList.append("spp_reptilia_lcvs_richness_distribution_names")


        if self.checkbox_distribucion_total_amphibia.isChecked():
            self.columnList.append("spp_amphibia_richness_distribution")
            self.columnList.append("spp_amphibia_richness_distribution_names")
        if self.checkbox_distribucion_total_amphibia_amenazadas.isChecked():
            self.columnList.append("spp_amphibia_threatened_richness_distribution")
            self.columnList.append("spp_amphibia_threatened_richness_distribution_names")
        if self.checkbox_distribucion_total_amphibia_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_amphibia_lcvs_richness_distribution")
            self.columnList.append("spp_amphibia_lcvs_richness_distribution_names")


        if self.checkbox_distribucion_total_trees.isChecked():
            self.columnList.append("spp_trees_richness_distribution")
            self.columnList.append("spp_trees_richness_distribution_names")
        if self.checkbox_distribucion_total_trees_amenazadas.isChecked():
            self.columnList.append("spp_trees_threatened_richness_distribution")
            self.columnList.append("spp_trees_threatened_richness_distribution_names")
        if self.checkbox_distribucion_total_trees_amenazadas_lcvs.isChecked():
            self.columnList.append("spp_trees_lcvs_richness_distribution")
            self.columnList.append("spp_trees_lcvs_richness_distribution_names")

        self.dlgIdentificarPoligono = IdentifyToolDialog()
        self.dlgIdentificarPoligono.showDialog(self.layer, self.columnList, self.progress, self.progressInfo, self.fonafifoUrl)
