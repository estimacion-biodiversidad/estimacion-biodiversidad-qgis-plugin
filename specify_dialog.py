# -*- coding: utf-8 -*-
"""
/***************************************************************************
 SpecifyDialog
                                 A QGIS plugin
 tool for clicking on feature
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-11-16
        git sha              : $Format:%H$
        copyright            : (C) 2018 by Jose
        email                : doe@doe.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5 import uic
from PyQt5 import QtWidgets
from PyQt5.QtGui import QFont, QPixmap
from PyQt5.QtWidgets import QCheckBox, QLineEdit, QHBoxLayout, QFileDialog, QLabel, QPushButton, QMessageBox, QFrame, QComboBox

from PyQt5.QtCore import QRect, Qt, QFile




class SpecifyDialog(QtWidgets.QDialog):
    def __init__(self, parent=None):
        """Constructor."""
        super(SpecifyDialog, self).__init__(parent)
        #self.setupUi(self)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        #self.setupUi(self)
        p = self.palette()
        p.setColor(self.backgroundRole(), Qt.white)
        self.setPalette(p)
        self.resize(800,750)

        # attributes
        self.filename = None

    def showDialog(self, layer, columnList, fonafifoUrl):
        self.layer = layer;
        self.columnList = columnList

        MAX_FOOTER = 680

        X_INITIAL = 10

        HEIGHT=30
        WIDTH_LABEL=150
        WIDTH_INPUT=50
        X=X_INITIAL
        Y=70

        ####################################################################################
        # Riqueza de especies en registros de presencia
        ####################################################################################

        # FONAFIFO logo
        pic = QLabel(self)
        pic.setGeometry(600, MAX_FOOTER - 30, 150, 50)
        pixmap = QPixmap()
        pixmap.load(fonafifoUrl);
        pic.setPixmap(pixmap)

        self.labelHeader = QLabel(self)
        self.labelHeader.setText("Búsqueda por criterios")
        self.labelHeader.setStyleSheet('color: #076F00')
        self.labelHeader.move(10, 20)
        newfont = QFont("Times", 20, QFont.Bold)
        self.labelHeader.setFont(newfont)

        self.frame = QFrame(self)
        self.frame.setFrameShape(QFrame.HLine)
        self.frame.setFrameShadow(QFrame.Sunken)
        self.frame.move(5,55);
        self.frame.resize(1955,5)


        label_presencia_especies = QLabel("Riqueza de especies en registros de presencia", self)
        label_presencia_especies.move(X,Y)
        label_presencia_especies.setStyleSheet('color: #0A9000')
        newfont = QFont("Times", 10, QFont.Bold)
        label_presencia_especies.setFont(newfont)

        label_presencia_especies_MIN = QLabel("MIN", self)
        label_presencia_especies_MIN.move(X+460,Y+15)
        newfont = QFont("Times", 8, QFont.Bold)
        label_presencia_especies_MIN.setFont(newfont)
        label_presencia_especies_MIN.setStyleSheet('color: #0A9000')


        self.STR_AMENAZADAS_UICN = "Amenazadas IUCN"
        self.STR_EN_PELIGRO_DE_EXTINCION = "En Peligro de Extincion"
        self.STR_CON_POBLACION_REDUCIDA = "Con Poblacion Reducida"
        self.STR_VEDADA = "Vedadas"
        self.STR_TOTAL = "--"


        X=X_INITIAL
        Y+=HEIGHT+10

        self.checkbox_presencia_total_especies = QCheckBox("Riqueza total de especies", self)
        self.checkbox_presencia_total_especies.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_presencia_total_especies = QComboBox(self)
        self.combobox_presencia_total_especies.addItem(self.STR_TOTAL)
        self.combobox_presencia_total_especies.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_presencia_total_especies.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_presencia_total_especies.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_presencia_total_especies.addItem(self.STR_VEDADA)
        self.combobox_presencia_total_especies.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_presencia_total_especies_min = QLineEdit(self)
        self.textedit_presencia_total_especies_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_presencia_total_mammalia = QCheckBox("Riqueza total de MAMMALIA", self)
        self.checkbox_presencia_total_mammalia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_presencia_total_mammalia= QComboBox(self)
        self.combobox_presencia_total_mammalia.addItem(self.STR_TOTAL)
        self.combobox_presencia_total_mammalia.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_presencia_total_mammalia.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_presencia_total_mammalia.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_presencia_total_mammalia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_presencia_total_mammalia_min = QLineEdit(self)
        self.textedit_presencia_total_mammalia_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_presencia_total_aves = QCheckBox("Riqueza total de AVES", self)
        self.checkbox_presencia_total_aves.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_presencia_total_aves= QComboBox(self)
        self.combobox_presencia_total_aves.addItem(self.STR_TOTAL)
        self.combobox_presencia_total_aves.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_presencia_total_aves.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_presencia_total_aves.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_presencia_total_aves.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_presencia_total_aves_min = QLineEdit(self)
        self.textedit_presencia_total_aves_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_presencia_total_reptilia = QCheckBox("Riqueza total de REPTILIA", self)
        self.checkbox_presencia_total_reptilia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_presencia_total_reptilia= QComboBox(self)
        self.combobox_presencia_total_reptilia.addItem(self.STR_TOTAL)
        self.combobox_presencia_total_reptilia.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_presencia_total_reptilia.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_presencia_total_reptilia.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_presencia_total_reptilia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_presencia_total_reptilia_min = QLineEdit(self)
        self.textedit_presencia_total_reptilia_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_presencia_total_amphibia = QCheckBox("Riqueza total de AMPHIBIA", self)
        self.checkbox_presencia_total_amphibia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_presencia_total_amphibia= QComboBox(self)
        self.combobox_presencia_total_amphibia.addItem(self.STR_TOTAL)
        self.combobox_presencia_total_amphibia.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_presencia_total_amphibia.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_presencia_total_amphibia.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_presencia_total_amphibia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_presencia_total_amphibia_min = QLineEdit(self)
        self.textedit_presencia_total_amphibia_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_presencia_total_trees = QCheckBox("Riqueza total de PLANTAE", self)
        self.checkbox_presencia_total_trees.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_presencia_total_trees = QComboBox(self)
        self.combobox_presencia_total_trees.addItem(self.STR_TOTAL)
        self.combobox_presencia_total_trees.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_presencia_total_trees.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_presencia_total_trees.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_presencia_total_trees.addItem(self.STR_VEDADA)
        self.combobox_presencia_total_trees.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_presencia_total_trees_min = QLineEdit(self)
        self.textedit_presencia_total_trees_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)


        ####################################################################################
        # Riqueza de especies en areas de distribución
        ####################################################################################

        X=X_INITIAL
        Y += HEIGHT + 20

        label_distribucion_especies = QLabel("Riqueza de especies por áreas de distribución", self)
        label_distribucion_especies.move(X,Y)
        newfont = QFont("Times", 10, QFont.Bold)
        label_distribucion_especies.setFont(newfont)
        label_distribucion_especies.setStyleSheet('color: #0A9000')

        label_distribucion_especies_MIN = QLabel("MIN", self)
        label_distribucion_especies_MIN.move(X+460,Y+15)
        newfont = QFont("Times", 8, QFont.Bold)
        label_distribucion_especies_MIN.setFont(newfont)
        label_distribucion_especies_MIN.setStyleSheet('color: #0A9000')

        X=X_INITIAL
        Y += HEIGHT + 20

        self.checkbox_distribucion_total_especies = QCheckBox("Riqueza total de especies", self)
        self.checkbox_distribucion_total_especies.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_distribucion_total_especies = QComboBox(self)
        self.combobox_distribucion_total_especies.addItem(self.STR_TOTAL)
        self.combobox_distribucion_total_especies.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_distribucion_total_especies.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_distribucion_total_especies.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_distribucion_total_especies.addItem(self.STR_VEDADA)
        self.combobox_distribucion_total_especies.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_distribucion_total_especies_min = QLineEdit(self)
        self.textedit_distribucion_total_especies_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_distribucion_total_mammalia = QCheckBox("Riqueza total de MAMMALIA", self)
        self.checkbox_distribucion_total_mammalia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_distribucion_total_mammalia = QComboBox(self)
        self.combobox_distribucion_total_mammalia.addItem(self.STR_TOTAL)
        self.combobox_distribucion_total_mammalia.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_distribucion_total_mammalia.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_distribucion_total_mammalia.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_distribucion_total_mammalia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_distribucion_total_mammalia_min = QLineEdit(self)
        self.textedit_distribucion_total_mammalia_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_distribucion_total_aves = QCheckBox("Riqueza total de AVES", self)
        self.checkbox_distribucion_total_aves.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_distribucion_total_aves = QComboBox(self)
        self.combobox_distribucion_total_aves.addItem(self.STR_TOTAL)
        self.combobox_distribucion_total_aves.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_distribucion_total_aves.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_distribucion_total_aves.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_distribucion_total_aves.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_distribucion_total_aves_min = QLineEdit(self)
        self.textedit_distribucion_total_aves_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_distribucion_total_reptilia = QCheckBox("Riqueza total de REPTILIA", self)
        self.checkbox_distribucion_total_reptilia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_distribucion_total_reptilia = QComboBox(self)
        self.combobox_distribucion_total_reptilia.addItem(self.STR_TOTAL)
        self.combobox_distribucion_total_reptilia.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_distribucion_total_reptilia.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_distribucion_total_reptilia.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_distribucion_total_reptilia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_distribucion_total_reptilia_min = QLineEdit(self)
        self.textedit_distribucion_total_reptilia_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_distribucion_total_amphibia = QCheckBox("Riqueza total de AMPHIBIA", self)
        self.checkbox_distribucion_total_amphibia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_distribucion_total_amphibia = QComboBox(self)
        self.combobox_distribucion_total_amphibia.addItem(self.STR_TOTAL)
        self.combobox_distribucion_total_amphibia.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_distribucion_total_amphibia.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_distribucion_total_amphibia.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_distribucion_total_amphibia.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_distribucion_total_amphibia_min = QLineEdit(self)
        self.textedit_distribucion_total_amphibia_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y+=HEIGHT+10
        X=X_INITIAL

        self.checkbox_distribucion_total_trees = QCheckBox("Riqueza total de PLANTAE", self)
        self.checkbox_distribucion_total_trees.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)
        X += WIDTH_LABEL + 50
        self.combobox_distribucion_total_trees = QComboBox(self)
        self.combobox_distribucion_total_trees.addItem(self.STR_TOTAL)
        self.combobox_distribucion_total_trees.addItem(self.STR_AMENAZADAS_UICN)
        self.combobox_distribucion_total_trees.addItem(self.STR_EN_PELIGRO_DE_EXTINCION)
        self.combobox_distribucion_total_trees.addItem(self.STR_CON_POBLACION_REDUCIDA)
        self.combobox_distribucion_total_trees.addItem(self.STR_VEDADA)
        self.combobox_distribucion_total_trees.setGeometry(X,Y,WIDTH_LABEL+50,HEIGHT)

        X += WIDTH_LABEL + 100
        self.textedit_distribucion_total_trees_min = QLineEdit(self)
        self.textedit_distribucion_total_trees_min.setGeometry(X,Y,WIDTH_INPUT,HEIGHT)

        Y = 600;
        X = X_INITIAL

        buttonSeleccionar = QPushButton('Seleccionar áreas', self)
        buttonSeleccionar.move(X, MAX_FOOTER)
        buttonSeleccionar.resize(200, 30)
        buttonSeleccionar.clicked.connect(self.selectPolygons)

        X = X + 250;

        buttonCerrar = QPushButton('Cerrar', self)
        buttonCerrar.move(X, MAX_FOOTER)
        buttonCerrar.resize(200, 30)
        buttonCerrar.clicked.connect(self.close)


        #layout_horizontal = QHBoxLayout(self)
        #layout_horizontal.addWidget(checkbox_1)
        #layout_horizontal.addWidget(textedit_1)

        #self.setLayout(layout_horizontal)


        self.show()

    def selectPolygons(self):
        # limpiar los layers seleccionados previamente
        self.layer.removeSelection()        

        # validar los valores ingresados
        hayErrores = False
        hayRegistros = False

        textedit_presencia_total_especies_min = self.textedit_presencia_total_especies_min.text()
        textedit_presencia_total_mammalia_min = self.textedit_presencia_total_mammalia_min.text()
        textedit_presencia_total_aves_min = self.textedit_presencia_total_aves_min.text()
        textedit_presencia_total_reptilia_min = self.textedit_presencia_total_reptilia_min.text()
        textedit_presencia_total_amphibia_min = self.textedit_presencia_total_amphibia_min.text()
        textedit_presencia_total_trees_min = self.textedit_presencia_total_trees_min.text()

        textedit_distribucion_total_especies_min = self.textedit_distribucion_total_especies_min.text()
        textedit_distribucion_total_mammalia_min = self.textedit_distribucion_total_mammalia_min.text()
        textedit_distribucion_total_aves_min = self.textedit_distribucion_total_aves_min.text()
        textedit_distribucion_total_reptilia_min = self.textedit_distribucion_total_reptilia_min.text()
        textedit_distribucion_total_amphibia_min = self.textedit_distribucion_total_amphibia_min.text()
        textedit_distribucion_total_trees_min = self.textedit_distribucion_total_trees_min.text()

        ###############################################################################
        ### VALIDACIONES
        ###############################################################################
        if self.checkbox_presencia_total_especies.isChecked():
            if not textedit_presencia_total_especies_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la presencia total de especies (MIN)')
               hayErrores = True
        if self.checkbox_presencia_total_mammalia.isChecked():
            if not textedit_presencia_total_mammalia_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la presencia total de Mammalia (MIN)')
               hayErrores = True
        if self.checkbox_presencia_total_aves.isChecked():
            if not textedit_presencia_total_aves_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la presencia total de Aves (MIN)')
               hayErrores = True
        if self.checkbox_presencia_total_reptilia.isChecked():
            if not textedit_presencia_total_reptilia_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la presencia total de Reptilia (MIN)')
               hayErrores = True
        if self.checkbox_presencia_total_amphibia.isChecked():
            if not textedit_presencia_total_amphibia_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la presencia total de Amphibia (MIN)')
               hayErrores = True
        if self.checkbox_presencia_total_trees.isChecked():
            if not textedit_presencia_total_trees_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la presencia total de Plantae (MIN)')
               hayErrores = True

        if self.checkbox_distribucion_total_especies.isChecked():
            if not textedit_distribucion_total_especies_min.isdigit():
                QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la riqueza por áreas de distribución (MIN)')
                hayErrores = True
        if self.checkbox_distribucion_total_mammalia.isChecked():
            if not textedit_distribucion_total_mammalia_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la riqueza total de Mammalia - Áreas de distribución (MIN)')
               hayErrores = True
        if self.checkbox_distribucion_total_aves.isChecked():
            if not textedit_distribucion_total_aves_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la riqueza total de Aves - Áreas de distribución (MIN)')
               hayErrores = True
        if self.checkbox_distribucion_total_reptilia.isChecked():
            if not textedit_distribucion_total_reptilia_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la riqueza total de Reptilia - Áreas de distribución (MIN)')
               hayErrores = True
        if self.checkbox_distribucion_total_amphibia.isChecked():
            if not textedit_distribucion_total_amphibia_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la riqueza total de Amphibia - Áreas de distribución (MIN)')
               hayErrores = True
        if self.checkbox_distribucion_total_trees.isChecked():
            if not textedit_distribucion_total_trees_min.isdigit():
               QMessageBox.about(self, 'Alerta!', 'Valor no numérico en la riqueza total de Plantae - Áreas de distribución (MIN)')
               hayErrores = True


        if(not hayErrores):
            for feature in self.layer.getFeatures():
                attrs = feature.attributes()

                ###############################################################################
                ### TOTAL ESPECIES POR REGISTROS DE PRESENCIA
                ###############################################################################
                # PRESENCIA - TOTAL
                if self.checkbox_presencia_total_especies.isChecked():
                    if self.combobox_presencia_total_especies.currentText() == self.STR_TOTAL:
                        if (feature["all_occurrence"] >= int(textedit_presencia_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_especies.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["all_iucn_threatened_occurrence"] >= int(textedit_presencia_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_especies.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["all_lcvs_pe_occurrence"] >= int(textedit_presencia_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_especies.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["all_lcvs_pr_occurrence"] >= int(textedit_presencia_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_especies.currentText() == self.STR_VEDADA:
                        if (feature["all_lcvs_ve_occurrence"] >= int(textedit_presencia_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True

                # PRESENCIA - MAMMALIA
                if self.checkbox_presencia_total_mammalia.isChecked():
                    if self.combobox_presencia_total_mammalia.currentText() == self.STR_TOTAL:
                        if (feature["mammalia_occurrence"] >= int(textedit_presencia_total_mammalia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_mammalia.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["mammalia_iucn_threatened_occurrence"] >= int(textedit_presencia_total_mammalia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_mammalia.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["mammalia_lcvs_pe_occurrence"] >= int(textedit_presencia_total_mammalia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_mammalia.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["mammalia_lcvs_pr_occurrence"] >= int(textedit_presencia_total_mammalia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True

                # PRESENCIA - AVES
                if self.checkbox_presencia_total_aves.isChecked():
                    if self.combobox_presencia_total_aves.currentText() == self.STR_TOTAL:
                        if (feature["aves_occurrence"] >= int(textedit_presencia_total_aves_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_aves.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["aves_iucn_threatened_occurrence"] >= int(textedit_presencia_total_aves_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_aves.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["aves_lcvs_pe_occurrence"] >= int(textedit_presencia_total_aves_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_aves.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["aves_lcvs_pr_occurrence"] >= int(textedit_presencia_total_aves_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True

                # PRESENCIA - REPTILIA
                if self.checkbox_presencia_total_reptilia.isChecked():
                    if self.combobox_presencia_total_reptilia.currentText() == self.STR_TOTAL:
                        if (feature["reptilia_occurrence"] >= int(textedit_presencia_total_reptilia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_reptilia.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["reptilia_iucn_threatened_occurrence"] >= int(textedit_presencia_total_reptilia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_reptilia.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["reptilia_lcvs_pe_occurrence"] >= int(textedit_presencia_total_reptilia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_reptilia.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["reptilia_lcvs_pr_occurrence"] >= int(textedit_presencia_total_reptilia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True


                # PRESENCIA - AMPHIBIA
                if self.checkbox_presencia_total_amphibia.isChecked():
                    if self.combobox_presencia_total_amphibia.currentText() == self.STR_TOTAL:
                        if (feature["amphibia_occurrence"] >= int(textedit_presencia_total_amphibia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_amphibia.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["amphibia_iucn_threatened_occurrence"] >= int(textedit_presencia_total_amphibia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_amphibia.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["amphibia_lcvs_pe_occurrence"] >= int(textedit_presencia_total_amphibia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_amphibia.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["amphibia_lcvs_pr_occurrence"] >= int(textedit_presencia_total_amphibia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True


                # PRESENCIA - PLANTAE
                if self.checkbox_presencia_total_trees.isChecked():
                    if self.combobox_presencia_total_trees.currentText() == self.STR_TOTAL:
                        if (feature["plantae_occurrence"] >= int(textedit_presencia_total_trees_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_trees.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["plantae_iucn_threatened_occurrence"] >= int(textedit_presencia_total_trees_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_trees.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["plantae_lcvs_pe_occurrence"] >= int(textedit_presencia_total_trees_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_trees.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["plantae_lcvs_pr_occurrence"] >= int(textedit_presencia_total_trees_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_presencia_total_trees.currentText() == self.STR_VEDADA:
                        if (feature["plantae_lcvs_ve_occurrence"] >= int(textedit_presencia_total_trees_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True




                ###############################################################################
                ### TOTAL ESPECIES POR AREAS DE DISTRIBUCION
                ###############################################################################
                # DISTRIBUCION - TOTAL
                if self.checkbox_distribucion_total_especies.isChecked():
                    if self.combobox_distribucion_total_especies.currentText() == self.STR_TOTAL:
                        if (feature["all_distribution"] >= int(textedit_distribucion_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_especies.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["all_iucn_threatened_distribution"] >= int(textedit_distribucion_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_especies.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["all_lcvs_pe_distribution"] >= int(textedit_distribucion_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_especies.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["all_lcvs_pr_distribution"] >= int(textedit_distribucion_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_especies.currentText() == self.STR_VEDADA:
                        if (feature["all_lcvs_ve_distribution"] >= int(textedit_distribucion_total_especies_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True

                # DISTRIBUCION - MAMMALIA
                if self.checkbox_distribucion_total_mammalia.isChecked():
                    if self.combobox_distribucion_total_mammalia.currentText() == self.STR_TOTAL:
                        if (feature["mammalia_distribution"] >= int(textedit_distribucion_total_mammalia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_mammalia.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["mammalia_iucn_threatened_distribution"] >= int(textedit_distribucion_total_mammalia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_mammalia.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["mammalia_lcvs_pe_distribution"] >= int(textedit_distribucion_total_mammalia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_mammalia.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["mammalia_pr_distribution"] >= int(textedit_distribucion_total_mammalia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True

                # DISTRIBUCION - REPTILIA
                if self.checkbox_distribucion_total_reptilia.isChecked():
                    if self.combobox_distribucion_total_reptilia.currentText() == self.STR_TOTAL:
                        if (feature["reptilia_distribution"] >= int(textedit_distribucion_total_reptilia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_reptilia.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["reptilia_iucn_threatened_distribution"] >= int(textedit_distribucion_total_reptilia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_reptilia.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["reptilia_lcvs_pe_distribution"] >= int(textedit_distribucion_total_reptilia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_reptilia.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["reptilia_pr_distribution"] >= int(textedit_distribucion_total_reptilia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True


                # DISTRIBUCION - AMPHIBIA
                if self.checkbox_distribucion_total_amphibia.isChecked():
                    if self.combobox_distribucion_total_amphibia.currentText() == self.STR_TOTAL:
                        if (feature["amphibia_distribution"] >= int(textedit_distribucion_total_amphibia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_amphibia.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["amphibia_iucn_threatened_distribution"] >= int(textedit_distribucion_total_amphibia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_amphibia.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["amphibia_lcvs_pe_distribution"] >= int(textedit_distribucion_total_amphibia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_amphibia.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["amphibia_pr_distribution"] >= int(textedit_distribucion_total_amphibia_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True

                # DISTRIBUCION - PLANTAE
                if self.checkbox_distribucion_total_trees.isChecked():
                    if self.combobox_distribucion_total_trees.currentText() == self.STR_TOTAL:
                        if (feature["plantae_distribution"] >= int(textedit_distribucion_total_trees_plantae_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_trees.currentText() == self.STR_AMENAZADAS_UICN:
                        if (feature["plantae_iucn_threatened_distribution"] >= int(textedit_distribucion_total_trees_plantae_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_trees.currentText() == self.STR_EN_PELIGRO_DE_EXTINCION:
                        if (feature["plantae_lcvs_pe_distribution"] >= int(textedit_distribucion_total_trees_plantae_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_trees.currentText() == self.STR_CON_POBLACION_REDUCIDA:
                        if (feature["plantae_lcvs_pr_distribution"] >= int(textedit_distribucion_total_trees_plantae_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True
                    elif self.combobox_distribucion_total_trees.currentText() == self.STR_VEDADA:
                        if (feature["plantae_lcvs_ve_distribution"] >= int(textedit_distribucion_total_trees_plantae_min)):
                            self.layer.select(feature.id())
                            hayRegistros = True



            if(not hayRegistros):
                QMessageBox.about(self, 'Alerta!', 'No existen registros dentro de los filtros seleccionados')

    def insertIntoColumnList(self, key):
        try:
            self.columnList.index(key)
        except ValueError:
            self.columnList.append(key)